Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc 
Build flags: 
Id flags:  

The output was:
1
ld: library 'System' not found
clang: error: linker command failed with exit code 1 (use -v to see invocation)


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ 
Build flags: 
Id flags:  

The output was:
1
ld: library 'c++' not found
clang: error: linker command failed with exit code 1 (use -v to see invocation)


Performing C SOURCE FILE Test HAVE_AVX failed with the following output:
Change Dir: /Users/machi/Desktop/Artifact/srsRAN_4G/cmake-build-debug/CMakeFiles/CMakeTmp

Run Build Command(s):/Applications/CLion.app/Contents/bin/ninja/mac/ninja cmTC_0e539 && [1/2] Building C object CMakeFiles/cmTC_0e539.dir/src.c.o
[2/2] Linking C executable cmTC_0e539


Return value: FAILED_TO_RUN
Source file was:

            #include <immintrin.h>
            int main()
            {
              __m256 a, b, c;
              const float src[8] = { 1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f, 7.0f, 8.0f };
              float dst[8];
              a = _mm256_loadu_ps( src );
              b = _mm256_loadu_ps( src );
              c = _mm256_add_ps( a, b );
              _mm256_storeu_ps( dst, c );
              int i = 0;
              for( i = 0; i < 8; i++ ){
                if( ( src[i] + src[i] ) != dst[i] ){
                  return -1;
                }
              }
              return 0;
            }
Performing C SOURCE FILE Test HAVE_AVX2 failed with the following output:
Change Dir: /Users/machi/Desktop/Artifact/srsRAN_4G/cmake-build-debug/CMakeFiles/CMakeTmp

Run Build Command(s):/Applications/CLion.app/Contents/bin/ninja/mac/ninja cmTC_f650b && [1/2] Building C object CMakeFiles/cmTC_f650b.dir/src.c.o
[2/2] Linking C executable cmTC_f650b


Return value: FAILED_TO_RUN
Source file was:

          #include <immintrin.h>
          int main()
          {
            __m256i a, b, c;
            const int src[8] = { 1, 2, 3, 4, 5, 6, 7, 8 };
            int dst[8];
            a =  _mm256_loadu_si256( (__m256i*)src );
            b =  _mm256_loadu_si256( (__m256i*)src );
            c = _mm256_add_epi32( a, b );
            _mm256_storeu_si256( (__m256i*)dst, c );
            int i = 0;
            for( i = 0; i < 8; i++ ){
              if( ( src[i] + src[i] ) != dst[i] ){
                return -1;
              }
            }
            return 0;
          }
Performing C SOURCE FILE Test HAVE_FMA failed with the following output:
Change Dir: /Users/machi/Desktop/Artifact/srsRAN_4G/cmake-build-debug/CMakeFiles/CMakeTmp

Run Build Command(s):/Applications/CLion.app/Contents/bin/ninja/mac/ninja cmTC_83676 && [1/2] Building C object CMakeFiles/cmTC_83676.dir/src.c.o
[2/2] Linking C executable cmTC_83676


Return value: FAILED_TO_RUN
Source file was:

            #include <immintrin.h>
            int main()
            {
              __m256 a, b, c, r;
              const float src[8] = { 1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f, 7.0f, 8.0f };
              float dst[8];
              a = _mm256_loadu_ps( src );
              b = _mm256_loadu_ps( src );
              c = _mm256_loadu_ps( src );
              r = _mm256_fmadd_ps( a, b, c );
              _mm256_storeu_ps( dst, r );
              int i = 0;
              for( i = 0; i < 8; i++ ){
                if( ( src[i] * src[i] + src[i] ) != dst[i] ){
                  return -1;
                }
              }
              return 0;
            }
Performing C SOURCE FILE Test HAVE_AVX512 failed with the following output:
Change Dir: /Users/machi/Desktop/Artifact/srsRAN_4G/cmake-build-debug/CMakeFiles/CMakeTmp

Run Build Command(s):/Applications/CLion.app/Contents/bin/ninja/mac/ninja cmTC_a6c0c && [1/2] Building C object CMakeFiles/cmTC_a6c0c.dir/src.c.o
[2/2] Linking C executable cmTC_a6c0c


Return value: FAILED_TO_RUN
Source file was:

          #include <immintrin.h>
          int main()
          {
            __m512i a, b, c;
            const int src[16] = { 0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8 , 0x9, 0xA, 0xB, 0xC, 0xD, 0xE, 0xF};
            int dst[16];
            a =  _mm512_loadu_si512( (__m512i*)src );
            b =  _mm512_loadu_si512( (__m512i*)src );
            c = _mm512_add_epi32( a, b );
            _mm512_storeu_si512( (__m512i*)dst, c );
            int i = 0;
            for( i = 0; i < 16; i++ ){
              if( ( src[i] + src[i] ) != dst[i] ){
                return -1;
              }
            }
            return 0;
          }
Performing C++ SOURCE FILE Test HAVE_DIAGNOSTIC_COLOR_CXX failed with the following output:
Change Dir: /Users/machi/Desktop/Artifact/srsRAN_4G/cmake-build-debug/CMakeFiles/CMakeTmp

Run Build Command(s):/Applications/CLion.app/Contents/bin/ninja/mac/ninja cmTC_57da6 && [1/2] Building CXX object CMakeFiles/cmTC_57da6.dir/src.cxx.o
FAILED: CMakeFiles/cmTC_57da6.dir/src.cxx.o 
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_DIAGNOSTIC_COLOR_CXX  -Wall -Wno-comment -Wno-reorder -Wno-unused-variable -Wtype-limits -std=c++14 -fno-strict-aliasing -Wno-unused-but-set-variable -march=native -mfpmath=sse -msse4.1 -DLV_HAVE_SSE -ggdb -O0 -DDEBUG_MODE -DBUILD_TYPE_DEBUG  -march=native -Werror=incompatible-pointer-types -Wall -Wno-comment -Wno-write-strings -Wno-unused-result -Wformat -Wmissing-field-initializers -Wtype-limits -std=c99 -fno-strict-aliasing -D_GNU_SOURCE -Wno-unused-but-set-variable -ggdb -O0 -DDEBUG_MODE -DBUILD_TYPE_DEBUG -mfpmath=sse -msse4.1 -DLV_HAVE_SSE -arch x86_64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk   -fdiagnostics-color=always -MD -MT CMakeFiles/cmTC_57da6.dir/src.cxx.o -MF CMakeFiles/cmTC_57da6.dir/src.cxx.o.d -o CMakeFiles/cmTC_57da6.dir/src.cxx.o -c /Users/machi/Desktop/Artifact/srsRAN_4G/cmake-build-debug/CMakeFiles/CMakeTmp/src.cxx
error: invalid argument '-std=c99' not allowed with 'C++'
ninja: build stopped: subcommand failed.


Source file was:
int main() { return 0; }
